<?xml version="1.0" encoding="UTF-8"?>
<!-- Set Ant Project Name -->
<project name="Athena" default="$main" basedir=".">
	
	<property name="version" value="0.1.0" />
	
	<property name="build" value="." />
	<property file="${build}/site.properties" />

	<property name="template" value="${build}/template" />
	<property name="optimize" value="${template}/optimize" />
	<property name="css" value="${siteroot}/css" />
	<property name="js" value="${siteroot}/js" />
	<property name="css-built" value="${siteroot}/css-built" />
	<property name="js-built" value="${siteroot}/js-built" />
	<property name="temp" value="${siteroot}/temp" />
	
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${build}/libs/ant-contrib-1.0b3.jar" />
	
	<target name="$main" depends="_!_clean, $create">
		<echo message="main" />
	</target>
	
	<target name="_!_clean" depends="_!_clean-built">
		<echo message="clean" />
		<!--<delete dir="${siteroot}" includes="**/*" excludes="build/" />-->
		<delete dir="${siteroot}/css" />
		<delete dir="${siteroot}/js" />
		<delete dir="${siteroot}/images" />
		<delete file="${siteroot}/favicon.ico" />
		<delete file="${siteroot}/index.html" />
	</target>
	
	<target name="_!_clean-built">
		<echo message="clean-built" />
		<delete dir="${css-built}" />
		<delete dir="${js-built}" />
	</target>

	<target name="$create">
		<echo message="create" />
		<copy toDir="${siteroot}" overwrite="false" encoding="UTF-8">
			<fileset dir="${template}"  excludes="optimize/,js/athenaframework/" />
			<filterchain>
				<replacetokens>
					<token key="sitename" value="${sitename}" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>
	
	<target name="_echo">
		<echo message="${basedir}" />
		<echo message="${os.name}" />
	</target>
	
	<target name="$compile" depends="__optimize,__html2js,__cdn-format,__mainjs-to-built,$link-to-built">
		<echo message="compile" />
	</target>
	
	<target name="__html2js" depends="">
		<copy toDir="${temp}">
			<fileset dir="${js-built}" includes="**/*.html"/>
		</copy>
		
		<replaceregexp  match="&#13;&#10;" replace="" flags="g" byline="false">
			<fileset dir="${temp}" />
		</replaceregexp>

		<replaceregexp  match="&#9;" replace="" flags="g" byline="false">
			<fileset dir="${temp}" />
		</replaceregexp>
		
		<foreach list="" target="__header-footer" param="file">
			<fileset dir="${temp}" includes="**/*.html"/>
		</foreach>
		
		<copy toDir="${js-built}">
			<fileset dir="${temp}" />
		</copy>
		
		<delete dir="${temp}" />
	</target>

	<target name="__header-footer" >
		<concat destfile="${file}.js">
			<header filtering="no" trimleading="yes">define({html:'</header>
			<fileset file="${file}" />
			<footer filtering="no" trimleading="yes">'});</footer>
		</concat>
	</target>

	<target name="__cdn-format" >
		<foreach list="" target="__cdn-footer" param="file">
			<fileset dir="${css-built}"  includes="**/*.js,**/*.html,**/*.css" />
		</foreach>
		<foreach list="" target="__cdn-footer" param="file">
			<fileset dir="${js-built}"  includes="**/*.js,**/*.html,**/*.css" />
		</foreach>
	</target>

	<target name="__cdn-footer" >
		<concat append="yes" destfile="${file}">${newline}</concat>
	</target>
	
	<target name="__mainjs-to-built" >
		<replaceregexp  match="js&quot;," replace="js-built&quot;," flags="g" byline="false">
			<fileset dir="${js-built}" includes="main.js" />
		</replaceregexp>
	</target>
	
	<target name="$link-to-built" >
		<echo message="link-to-built" />
		<replaceregexp  match="js/" replace="js-built/" flags="g" byline="false">
			<fileset dir="${siteroot}" includes="index.html" />
		</replaceregexp>
		<replaceregexp  match="css/" replace="css-built/" flags="g" byline="false">
			<fileset dir="${siteroot}" includes="index.html" />
		</replaceregexp>
	</target>
	
	<target name="$link-to-origin" >
		<echo message="link-to-origin" />
		<replaceregexp  match="js-built/" replace="js/" flags="g" byline="false">
			<fileset dir="${siteroot}" includes="index.html" />
		</replaceregexp>
		<replaceregexp  match="css-built/" replace="css/" flags="g" byline="false">
			<fileset dir="${siteroot}" includes="index.html" />
		</replaceregexp>
	</target>
	
	<!-- set the operating system test properties -->  
	<condition property="__isMac">
		<os family="mac" />
	</condition>
	  
	<condition property="__isWindows">
		<os family="windows" />
	</condition>
	  
	<condition property="__isUnix">
		<os family="unix" />
	</condition>
	
	<target name="__optimize" depends="__optimize-unix,__optimize-windows">
		<echo message="optimize" />
	</target>
	
	<target name="__optimize-unix" if="__isUnix">
		<echo message="optimize-unix" />
		<exec executable="/bin/sh" failonerror="true">
			<arg line="-c '/usr/local/bin/node ${optimize}/r.js -o ${optimize}/build.js appDir=${css} baseUrl=${siteroot} dir=${css-built}'" />
		</exec>
		<exec executable="/bin/sh" failonerror="true">
			<arg line="-c '/usr/local/bin/node ${optimize}/r.js -o ${optimize}/build.js appDir=${js} baseUrl=${siteroot} dir=${js-built}'" />
		</exec>
		
		<replaceregexp  match="&#34;js&#34;" replace="&#34;js-built&#34;" flags="g" byline="false">
			<fileset dir="${js-built}" includes="main.js" />
		</replaceregexp>
	</target>
	
	<target name="__optimize-windows" if="__isWindows">
		<echo message="optimize-windows" />
		<exec executable="cmd" failonerror="true">
			<arg line="/c node ${optimize}/r.js -o ${optimize}/build.js appDir=${css} baseUrl=${siteroot} dir=${css-built} " />
		</exec>
		<exec executable="cmd" failonerror="true">
			<arg line="/c node ${optimize}/r.js -o ${optimize}/build.js appDir=${js} baseUrl=${siteroot} dir=${js-built} " />
		</exec>
		                
		<replaceregexp  match="&#34;js&#34;" replace="&#34;js-built&#34;" flags="g" byline="false">
			<fileset dir="${js-built}" includes="main.js" />
		</replaceregexp>
	</target>
	
</project>
